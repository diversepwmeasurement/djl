jobs:
  build:
    if: github.repository == 'deepjavalibrary/djl'
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: corretto
        java-version: 17
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      name: check disk space
      run: df -h
    - continue-on-error: true
      id: sentencepiece_changes
      uses: dorny/paths-filter@v2
      with:
        filters: "src:\n  - 'extensions/sentencepiece/**'\n"
    - continue-on-error: true
      if: ${{ runner.os == 'macOS' }}
      name: install libomp on macos
      run: brew install libomp
    - continue-on-error: true
      if: steps.sentencepiece_changes.outputs.src == 'true'
      name: Compile Sentencepiece JNI
      run: ./gradlew :extensions:sentencepiece:compileJNI
    - continue-on-error: true
      id: fasttext_changes
      uses: dorny/paths-filter@v2
      with:
        filters: "src:\n  - 'extensions/fasttext/**'\n"
    - continue-on-error: true
      if: steps.fasttext_changes.outputs.src == 'true'
      name: Compile fastText JNI
      run: ./gradlew :extensions:fasttext:compileJNI
    - continue-on-error: true
      id: tokenizers_changes
      uses: dorny/paths-filter@v2
      with:
        filters: "src:\n  - 'extensions/tokenizers/**'\n"
    - continue-on-error: true
      if: steps.tokenizers_changes.outputs.src == 'true'
      name: Compile tokenizers JNI
      run: ./gradlew :extensions:tokenizers:compileJNI
    - continue-on-error: true
      id: pytorch_changes
      uses: dorny/paths-filter@v2
      with:
        filters: "src:\n  - 'engines/pytorch/pytorch-native/**'\n"
    - continue-on-error: true
      if: steps.pytorch_changes.outputs.src == 'true'
      name: Compile PyTorch JNI
      run: ./gradlew :engines:pytorch:pytorch-native:compileJNI
    - continue-on-error: true
      name: Test ONNX Runtime
      run: './gradlew -Dai.djl.default_engine=OnnxRuntime :integration:test

        ./gradlew :integration:clean

        '
    - continue-on-error: true
      name: Build with Gradle
      run: ./gradlew build :jacoco:testCodeCoverageReport --stacktrace
    - continue-on-error: true
      if: always()
      name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: reports-${{ matrix.operating-system }}
        path: '${{ github.workspace }}/**/build/reports/**/*

          !${{ github.workspace }}/**/build/reports/jacoco/*

          '
    - continue-on-error: true
      name: upload to codecov
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: false
        files: ./jacoco/build/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml
        path_to_write_report: ./codecov_report.txt
    strategy:
      matrix:
        operating-system:
        - ubuntu-latest
        - macos-13
  build-windows:
    if: github.repository == 'deepjavalibrary/djl'
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: corretto
        java-version: 17
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      id: sentencepiece_changes
      uses: dorny/paths-filter@v2
      with:
        filters: "src:\n  - 'extensions/sentencepiece/**'\n"
    - continue-on-error: true
      if: steps.sentencepiece_changes.outputs.src == 'true'
      name: Compile Sentencepiece JNI
      run: ./gradlew :extensions:sentencepiece:compileJNI
    - continue-on-error: true
      id: pytorch_changes
      uses: dorny/paths-filter@v2
      with:
        filters: "src:\n  - 'engines/pytorch/pytorch-native/**'\n"
    - continue-on-error: true
      if: steps.pytorch_changes.outputs.src == 'true'
      name: Compile PyTorch JNI
      run: ./gradlew :engines:pytorch:pytorch-native:compileJNI
    - continue-on-error: true
      id: tokenizers_changes
      uses: dorny/paths-filter@v2
      with:
        filters: "src:\n  - 'extensions/tokenizers/**'\n"
    - continue-on-error: true
      if: steps.tokenizers_changes.outputs.src == 'true'
      name: Compile tokenizers JNI
      run: ./gradlew :extensions:tokenizers:compileJNI
    - continue-on-error: true
      name: Integration tests
      run: './gradlew -Pjni "-Dai.djl.default_engine=PyTorch" test -x examples:test

        ./gradlew -Pjni --rerun-tasks "-Dai.djl.default_engine=TensorFlow" test -x
        examples:test

        ./gradlew --rerun-tasks "-Dai.djl.default_engine=OnnxRuntime" :integration:test

        '
name: Continuous
on:
  repository_dispatch:
    types: trigger-ga___continuous.yml
