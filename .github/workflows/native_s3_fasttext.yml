jobs:
  build-fasttext-jni-arm64-osx:
    if: ${{ github.repository == 'deepjavalibrary/djl' && always() }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        architecture: aarch64
        distribution: corretto
        java-version: 17
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      name: Release JNI prep
      run: './gradlew :extensions:fasttext:compileJNI

        ./gradlew -Pjni :extensions:fasttext:test

        '
    - continue-on-error: true
      name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: us-east-2
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - continue-on-error: true
      name: Copy files to S3 with the AWS CLI
      run: 'FASTTEXT_VERSION="$(cat gradle.properties | awk -F ''='' ''/fasttext_version/
        {print $2}'')"

        aws s3 sync extensions/fasttext/jnilib s3://djl-ai/publish/fasttext-${FASTTEXT_VERSION}/jnilib/

        '
  build-fasttext-jni-linux:
    container: amazonlinux:2
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Install Environment
      run: 'yum -y update

        yum -y groupinstall "Development Tools"

        yum -y install patch cmake3

        ln -sf /usr/bin/cmake3 /usr/bin/cmake

        pip3 install awscli --upgrade

        '
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: corretto
        java-version: 17
    - continue-on-error: true
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      name: Release JNI prep
      run: 'export PYTORCH_PRECXX11=true

        ./gradlew :extensions:fasttext:compileJNI

        ./gradlew -Pjni :extensions:fasttext:test

        '
    - continue-on-error: true
      name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: us-east-2
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - continue-on-error: true
      name: Copy files to S3 with the AWS CLI
      run: 'FASTTEXT_VERSION="$(cat gradle.properties | awk -F ''='' ''/fasttext_version/
        {print $2}'')"

        aws s3 sync extensions/fasttext/jnilib s3://djl-ai/publish/fasttext-${FASTTEXT_VERSION}/jnilib/

        '
  build-fasttext-jni-osx:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: corretto
        java-version: 17
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      name: Release JNI prep
      run: './gradlew :extensions:fasttext:compileJNI

        ./gradlew -Pjni :extensions:fasttext:test

        '
    - continue-on-error: true
      name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: us-east-2
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - continue-on-error: true
      name: Copy files to S3 with the AWS CLI
      run: 'FASTTEXT_VERSION="$(cat gradle.properties | awk -F ''='' ''/fasttext_version/
        {print $2}'')"

        aws s3 sync extensions/fasttext/jnilib s3://djl-ai/publish/fasttext-${FASTTEXT_VERSION}/jnilib/

        '
name: Native S3 fastText
on:
  repository_dispatch:
    types: trigger-ga___native_s3_fasttext.yml
