jobs:
  build:
    if: github.repository == 'deepjavalibrary/djl'
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: corretto
        java-version: 17
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      name: check disk space
      run: df -h
    - continue-on-error: true
      if: ${{ runner.os == 'macOS' }}
      name: install libomp on macos
      run: brew install libomp
    - continue-on-error: true
      name: Build with Gradle
      run: ./gradlew -Dnightly=true build :jacoco:testCodeCoverageReport --stacktrace
    - continue-on-error: true
      if: always()
      name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: reports
        path: '${{ github.workspace }}/**/build/reports/**/*

          !${{ github.workspace }}/**/build/reports/jacoco/*

          '
    strategy:
      matrix:
        operating-system:
        - macos-13
        - ubuntu-latest
  create-runners:
    if: github.repository == 'deepjavalibrary/djl'
    outputs:
      aarch64_instance_id: ${{ steps.create_aarch64.outputs.action_graviton_instance_id
        }}
      gpu_1_instance_id: ${{ steps.create_gpu_1.outputs.action_gpu_instance_id }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: create_aarch64
      name: Create new Graviton instance
      run: 'cd /home/ubuntu/djl_benchmark_script/scripts

        token=$( curl -X POST -H "Authorization: token ${{ secrets.ACTION_RUNNER_PERSONAL_TOKEN
        }}" \

        https://api.github.com/repos/deepjavalibrary/djl/actions/runners/registration-token
        \

        --fail \

        | jq ''.token'' | tr -d ''"'' )

        ./start_instance.sh action_graviton $token djl

        '
    - continue-on-error: true
      id: create_gpu_1
      name: Create new GPU instance 1
      run: 'cd /home/ubuntu/djl_benchmark_script/scripts

        token=$( curl -X POST -H "Authorization: token ${{ secrets.ACTION_RUNNER_PERSONAL_TOKEN
        }}" \

        https://api.github.com/repos/deepjavalibrary/djl/actions/runners/registration-token
        \

        --fail \

        | jq ''.token'' | tr -d ''"'' )

        ./start_instance.sh action_gpu $token djl

        '
  publish:
    if: github.repository == 'deepjavalibrary/djl'
    needs:
    - build
    - test-pytorch
    - test-tensorflow
    - test-aarch64
    - test-cuda-121
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: corretto
        java-version: 17
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      env:
        ORG_GRADLE_PROJECT_ossrhPassword: ${{ secrets.ORG_GRADLE_PROJECT_ossrhPassword
          }}
        ORG_GRADLE_PROJECT_ossrhUsername: ${{ secrets.ORG_GRADLE_PROJECT_ossrhUsername
          }}
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_signingKey }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_signingPassword
          }}
      if: ${{ github.event.inputs.mode == '' || github.event.inputs.mode == 'snapshot'
        }}
      name: Publish to snapshot repository
      run: './gradlew clean engines:pytorch:pytorch-jni:publish -Ppt_version=1.13.1
        -Psnapshot

        ./gradlew clean engines:pytorch:pytorch-jni:publish -Ppt_version=2.1.2 -Psnapshot

        ./gradlew clean engines:pytorch:pytorch-jni:publish -Ppt_version=2.2.2 -Psnapshot

        ./gradlew clean engines:pytorch:pytorch-jni:publish -Ppt_version=2.3.0 -Psnapshot

        ./gradlew clean engines:ml:xgboost:publish -Pgpu -Psnapshot

        ./gradlew clean publish -Psnapshot

        cd bom

        ./gradlew publish -Psnapshot

        '
    - continue-on-error: true
      env:
        ORG_GRADLE_PROJECT_ossrhPassword: ${{ secrets.ORG_GRADLE_PROJECT_ossrhPassword
          }}
        ORG_GRADLE_PROJECT_ossrhUsername: ${{ secrets.ORG_GRADLE_PROJECT_ossrhUsername
          }}
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_signingKey }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_signingPassword
          }}
      if: ${{ github.event.inputs.mode == 'staging' }}
      name: Publish to staging repository
      run: './gradlew clean engines:pytorch:pytorch-jni:publish -Ppt_version=1.13.1
        -P${{ github.event.inputs.mode }}

        ./gradlew clean engines:pytorch:pytorch-jni:publish -Ppt_version=2.1.2 -P${{
        github.event.inputs.mode }}

        ./gradlew clean engines:pytorch:pytorch-jni:publish -Ppt_version=2.2.2 -P${{
        github.event.inputs.mode }}

        ./gradlew clean engines:pytorch:pytorch-jni:publish -Ppt_version=2.3.0 -P${{
        github.event.inputs.mode }}

        ./gradlew clean engines:ml:xgboost:publish -Pgpu -P${{ github.event.inputs.mode
        }}

        ./gradlew clean publish -P${{ github.event.inputs.mode }}

        cd bom

        ./gradlew publish -P${{ github.event.inputs.mode }}

        '
    - continue-on-error: true
      name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: us-east-2
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  stop-runners:
    if: ${{ github.repository == 'deepjavalibrary/djl' && always() }}
    needs:
    - create-runners
    - test-aarch64
    - test-cuda-121
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Stop all instances
      run: 'cd /home/ubuntu/djl_benchmark_script/scripts

        instance_id=${{ needs.create-runners.outputs.aarch64_instance_id }}

        ./stop_instance.sh $instance_id

        cd /home/ubuntu/djl_benchmark_script/scripts

        instance_id=${{ needs.create-runners.outputs.gpu_1_instance_id }}

        ./stop_instance.sh $instance_id

        '
  test-aarch64:
    container: amazonlinux:2
    if: github.repository == 'deepjavalibrary/djl'
    needs: create-runners
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Setup Environment
      run: 'yum -y update

        yum install -y tar gzip

        '
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        architecture: aarch64
        distribution: corretto
        java-version: 17
    - continue-on-error: true
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      name: Test with Gradle
      run: './gradlew :integration:test "-Dai.djl.default_engine=PyTorch"

        ./gradlew :integration:clean

        # OnnxRuntime 1.17.1 requires GLIBC 2.27

        # ./gradlew :integration:test "-Dai.djl.default_engine=OnnxRuntime"

        # ./gradlew :integration:clean

        '
    timeout-minutes: 30
  test-cuda-121:
    container:
      image: nvidia/cuda:12.1.1-cudnn8-runtime-ubuntu20.04
      options: --gpus all --runtime=nvidia
    if: github.repository == 'deepjavalibrary/djl'
    needs: create-runners
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Setup Environment
      run: 'apt-get update

        apt-get install -y software-properties-common wget locales libfontconfig1

        locale-gen en_US.UTF-8

        '
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: corretto
        java-version: 17
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      name: Test with Gradle
      run: './gradlew :integration:test

        ./gradlew :engines:tensorflow:tensorflow-model-zoo:test

        ./gradlew :integration:clean :integration:test -Dai.djl.default_engine=PyTorch

        ./gradlew :integration:clean :integration:test -Dai.djl.default_engine=TensorFlow

        ./gradlew :engines:mxnet:mxnet-model-zoo:test

        ./gradlew :engines:pytorch:pytorch-model-zoo:test

        ./gradlew :engines:tensorflow:tensorflow-model-zoo:test

        ./gradlew :engines:tensorrt:test

        ./gradlew :engines:onnxruntime:onnxruntime-engine:test

        '
    timeout-minutes: 30
  test-pytorch:
    if: github.repository == 'deepjavalibrary/djl'
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: corretto
        java-version: 17
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      name: Test with Gradle
      run: ./gradlew :integration:test "-Dai.djl.default_engine=PyTorch"
    strategy:
      matrix:
        operating-system:
        - macos-latest
        - ubuntu-latest
        - windows-latest
  test-tensorflow:
    if: github.repository == 'deepjavalibrary/djl'
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: corretto
        java-version: 17
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      name: Test with Gradle
      run: ./gradlew :integration:test "-Dai.djl.default_engine=TensorFlow"
    strategy:
      matrix:
        operating-system:
        - ubuntu-latest
        - windows-latest
name: Nightly Publish
on:
  repository_dispatch:
    types: trigger-ga___nightly_publish.yml
