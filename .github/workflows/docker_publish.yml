jobs:
  publish:
    if: github.repository == 'deepjavalibrary/djl'
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Setup Docker buildx
      uses: docker/setup-buildx-action@v2
    - continue-on-error: true
      name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: us-east-2
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - continue-on-error: true
      id: login-ecr
      name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registries: '314815235551'
    - continue-on-error: true
      name: Login to Docker
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.DOCKER_PASSWORD }}
        username: ${{ secrets.DOCKER_USERNAME }}
    - continue-on-error: true
      name: Set variables
      run: 'DJL_VERSION=$(cat gradle.properties | awk -F ''='' ''/djl_version/ {print
        $2}'')

        echo "DJL_VERSION=$DJL_VERSION" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Build djl_spark wheel
      run: ./setup.py bdist_wheel
      working-directory: extensions/spark/setup/
    - continue-on-error: true
      if: ${{ github.event.inputs.mode == '' || github.event.inputs.mode == 'nightly'
        }}
      name: Build and push nightly docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: docker/spark/Dockerfile
        push: false
        tags: deepjavalibrary/djl-spark:cpu-nightly
    - continue-on-error: true
      if: ${{ github.event.inputs.mode == 'release' }}
      name: Build and push release docker image
      uses: docker/build-push-action@v4
      with:
        build-args: DJL_VERSION=${DJL_VERSION}
        context: .
        file: docker/spark/Dockerfile
        push: false
        tags: deepjavalibrary/djl-spark:${{ env.DJL_VERSION }}-cpu
name: Docker publish
on:
  repository_dispatch:
    types: trigger-ga___docker_publish.yml
