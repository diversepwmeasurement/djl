jobs:
  build-tensorrt-jni-linux:
    container: deepjavalibrary/ubuntu18.04:tensorrt-cuda116
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Install Environment
      run: pip3 install awscli --upgrade
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: corretto
        java-version: 17
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      name: Release JNI prep
      run: ./gradlew :engines:tensorrt:compileJNI
    - continue-on-error: true
      name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: us-east-2
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - continue-on-error: true
      name: Copy files to S3 with the AWS CLI
      run: 'TRT_VERSION="$(cat gradle.properties | awk -F ''='' ''/trt_version/ {print
        $2}'')"

        aws s3 sync engines/tensorrt/jnilib s3://djl-ai/publish/tensorrt/${TRT_VERSION}/jnilib

        aws cloudfront create-invalidation --distribution-id E371VB8JQ6NRVY --paths
        "/tensorrt/${TRT_VERSION}/jnilib*"

        '
name: Native JNI S3 TensorRT
on:
  repository_dispatch:
    types: trigger-ga___native_jni_s3_tensorrt.yml
